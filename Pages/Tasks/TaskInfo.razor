@* Copyright (C) Jonathan Shull - See license file at github.com/amytho/pdf-acc-toolset *@
@using Pdf_Acc_Toolset.Services;
@using Pdf_Acc_Toolset.Services.Tools;
@using Pdf_Acc_Toolset.Services.Util;

<p>
    @switch(targetTask.Name) {
        case "List Generator":
            ListGeneration list = (ListGeneration)targetTask;
            <p>List Items: @list.GetListItemCount()</p>
            <p>Labels: @list.GetLabels()</p>
        break;
        case "Table Generator":
            TableGeneration table = (TableGeneration)targetTask;
            <p>Rows: @table.GetRowCount()</p>
            <p>Columns: @table.GetColumnCount()</p>
        break;
        case "Tag Generator":
            TagGeneration tag = (TagGeneration)targetTask;
            <p>Tag Amount: @tag.GetTagCount()</p>
            <p>Tag Type: @Enum.GetName(typeof(Services.Util.TagType), tag.GetTagType())</p>
        break;
        case "Attribute Modifier":
            AttributeModifier modifier = (AttributeModifier)targetTask;
            <p>Attribute: @modifier.GetAttribute()</p>
            <p>Action: @modifier.GetAttributeAction()</p>
            string value = modifier.GetValue();
            if (value != null && value.Length > 0) {
                <p>Value: @value</p>
            }
        break;
        case "Color Replacer":
            <p>
                @GetColorChanges()
            </p>
        break;
        case "Tag Shifter":
            TagShifter shifter = (TagShifter)targetTask;
            <p>Shifting @shifter.getTagToShift().ToString() tags</p>
        break;
        default:
        break;
    }
</p>

@code {
    [Parameter]
    public AccessibilityTask targetTask { get; set; }

    // Returns a string showing the hex conversions
    private string GetColorChanges()
    {
        ColorReplacer replacer = (ColorReplacer)targetTask;
        string target = ColorUtil.ConvertToHex(replacer.GetTarget());
        string replacement = ColorUtil.ConvertToHex(replacer.GetReplacement());
        return $"Converting {target} to {replacement}";
    }
}