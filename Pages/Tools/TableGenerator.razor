@using Pdf_Acc_Toolset.Services;
@using Pdf_Acc_Toolset.Services.Tools;
@using System.ComponentModel.DataAnnotations;

<h3 class="text-xl">Table Generator</h3>

<p class="text-lg">
    Generate a table using the options below. You must generate at least 1 row.
    Enter the amount of rows and columns to be created. The first row will automatically be header cells.
    The title is for making the table easier to identify if you are inserting multiple tables.
    See List Documentation for more information.
</p>

<hr class="w-11/12 text-center m-4" />

<EditForm Model="@Model" OnSubmit="@Submit" class="text-lg">
    <DataAnnotationsValidator />
    <div class="flex flex-wrap justify-between px-8 space-x-4">
        <div>
            <label for="title">Table Title: </label>
            <InputText id="title" class="bg-gray-800 rounded-md p-2 text-green-400" @bind-Value="Model.title" />
        </div>
        <div>
            <label for="amntRow">Row Amount: </label>
            <InputNumber id="amntRow" class="bg-gray-800 rounded-md p-2 text-green-400" @bind-Value="Model.amountOfRows"
                min="1" max="999" />
        </div>
        <div class="self-center">
            <label for="amntCol">Column Amount: </label>
            <InputNumber id="amntCol" class="bg-gray-800 rounded-md p-2 text-green-400" @bind-Value="Model.amountOfColumns"
                min="1" max="999" />
        </div>
    </div>

    <div class="flex flex-wrap w-full mt-4 space-x-2">
        <button class="grow bg-red-500 rounded-lg py-4 cursor-pointer" @onclick="Reset">Reset</button>
        <input class="grow bg-blue-500 rounded-lg py-4 cursor-pointer" type="submit" value="Add Task" />
    </div>
</EditForm>

@code {
	public TableGenModel Model { get; set; }
	protected override void OnInitialized()
	{
		this.Model = new();
		base.OnInitialized();
	}

	public void Reset()
	{
		Model.title = "";
		Model.amountOfColumns = 3;
		Model.amountOfRows = 1;
	}

	public void Submit()
	{
		// Create the task
		TableGeneration generation = new(PdfManager.GetDocument(), Model.title, Model.amountOfRows, Model.amountOfColumns);
		// Add the task to the queue
		TaskManager.AddTask(generation);

		// Reset the modal (to do - show a notification that it worked or something)
		Reset();
	}

	public class TableGenModel
	{
		public string title { get; set; }

		[Range(1, 999, ErrorMessage = "Amount must be greater than 0")]
		public int amountOfRows { get; set; }

        [Range(1, 999, ErrorMessage = "Amount must be greater than 0")]
		public int amountOfColumns { get; set; }
	}
}
