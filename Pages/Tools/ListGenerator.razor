@using Pdf_Acc_Toolset.Services;
@using Pdf_Acc_Toolset.Services.Tools;
@using System.ComponentModel.DataAnnotations;

<h3 class="text-xl">List Generator</h3>

<p class="text-lg">
    Generate a list using the options below. You must generate at least 1 list item.
    The title is for making the list item easier to identify if you are inserting multiple lists.
    If the Label box is checked, a Lbl tag will be inserted with each list item.
    See List Documentation for more information.
</p>

<hr class="w-11/12 text-center m-4" />

<EditForm Model="@Model" OnSubmit="@Submit" class="text-lg">
    <DataAnnotationsValidator />
    <div class="flex flex-wrap justify-between px-8 space-x-4">
        <div>
            <label for="title">List Title: </label>
            <InputText id="title" class="bg-gray-800 rounded-md p-2 text-green-400" @bind-Value="Model.title" />
        </div>
        <div>
            <label for="amnt">List Amount: </label>
            <InputNumber id="amnt" class="bg-gray-800 rounded-md p-2 text-green-400" @bind-Value="Model.amountOfItems"
                min="1" max="999" />
        </div>
        <div class="self-center">
            <label for="lbl">Add Labels?</label>
            <InputCheckbox id="lbl" class="bg-gray-800 rounded-md p-2 text-green-400" @bind-Value="Model.addLabels"
                checked />
        </div>
    </div>

    <div class="flex flex-wrap w-full mt-4 space-x-2">
        <button class="grow bg-red-500 rounded-lg py-4 cursor-pointer" @onclick="Reset">Reset</button>
        <input class="grow bg-blue-500 rounded-lg py-4 cursor-pointer" type="submit" value="Add Task" />
    </div>
</EditForm>

@code {
	public ListGenModel Model { get; set; }
	protected override void OnInitialized()
	{
		this.Model = new();
		base.OnInitialized();
	}

	public void Reset()
	{
		Model.title = "";
		Model.addLabels = false;
		Model.amountOfItems = 1;
	}

	public void Submit()
	{
		// Create the task
		ListGeneration generation = new(PdfManager.GetDocument(), Model.title, Model.amountOfItems, Model.addLabels);
		// Add the task to the queue
		TaskManager.AddTask(generation);

		// Reset the modal (to do - show a notification that it worked or something)
		Reset();
	}

	public class ListGenModel
	{
		public string title { get; set; }

		[Range(1, 999, ErrorMessage = "Amount must be greater than 0")]
		public int amountOfItems { get; set; }

		public bool addLabels { get; set; }
	}
}
