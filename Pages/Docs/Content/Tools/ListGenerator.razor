@* Copyright (C) Jonathan Shull - See license file at github.com/amytho/pdf-acc-toolset *@
@layout DocumentationLayout
@using Pdf_Acc_Toolset.Services.UI;
@page "/docs/tools/list"
@page "/docs/tools/listgenerator"
@page "/docs/tools/list-generator"
@page "/docs/tools/list_generator"

<h1 id="listGen">List Generator</h1>

<p>This tool lets you create accessible lists with ease. Each list contains all of the tags needed for accessibility. Every list has a parent List tag, a specified amount of List Items, List Item Bodies (dependent on amount of list items), and Labels (optional, also dependent on amount of list items).</p>

<p>Since this is just a tagging operation, you will still need to assign content to the list in a PDF editor.</p>

<h2 id="parameters">Parameters</h2>

<div>
    <table>
        <tr>
            <th>Parameter</th>
            <th>Purpose</th>
        </tr>
        <tr>
            <td>Title <b>(Optional)</b></td>
            <td>The title of the parent List tag. Used by the remediator for identification.</td>
        </tr>
        <tr>
            <td>List Amount</td>
            <td>The amount of List Items to generate.</td>
        </tr>
        <tr>
            <td>Add labels</td>
            <td>If selected, each List Item will contain a Label tag.</td>
        </tr>
    </table>
</div>

<h2 id="output">Output</h2>

<p>
    Output with a title of "Example", 20 list items, and labels.
</p>

<img src="/img/docs/listExample.png" alt="Generated list. Contains a parent list tag, twenty list items each with a label and a list item body. The title is 'example title'" title="Output of the list tool">

@code {
    protected override void OnInitialized()
    {
        // Make a new list of toc items
        List<TocItem> list = new List<TocItem>();
        // Set the items
        list.Add(new TocItem("listGen", 1, "List Generator"));
        list.Add(new TocItem("parameters", 2, "Parameters"));
        list.Add(new TocItem("output", 2, "Output"));
        // Send to TOC service
        TocService.SetToc(list);
        base.OnInitialized();
    }
}
