@using Pdf_Acc_Toolset.Services

<div class="top-row navbar navbar-dark">
    <div class="flex justify-between sm:justify-center h-full">
        <a class="navbar-brand self-center" href="">Pdf-Acc-Toolset</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            Toggle
        </button>
    </div>
</div>

<div class="@NavMenuCssClass">
    <nav class="flex flex-col">
        @if (menu == NavMenus.Main) {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi" aria-hidden="true"></span> Import
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="tools" Match="NavLinkMatch.All">
                    <span class="oi" aria-hidden="true"></span> Tools
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="tasks">
                    <span class="oi" aria-hidden="true"></span> Queued Tasks
                    @if (taskCounter != null) {
                        <Badge content="@taskCounter" />
                    }
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="docs">
                    <span class="oi" aria-hidden="true"></span> Documentation
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="export" title="Review and Export">
                    <span class="oi" aria-hidden="true"></span> Export
                </NavLink>
            </div>
            @* Only show the dev menu in dev mode. *@
            if (Config.Env.Equals("Development")) {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="testing">
                        <span class="oi" aria-hidden="true"></span> DEV TEST
                    </NavLink>
                </div>
            }
        } else if (menu == NavMenus.Docs) {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi" aria-hidden="true"></span> Return To Edit
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/docs/tools" Match="NavLinkMatch.All">
                    <span class="oi" aria-hidden="true"></span> Tools
                </NavLink>
            </div>
            <div class="nav-item px-3 nav-child ml-4">
                <NavLink class="nav-link" href="/docs/tools/list" Match="NavLinkMatch.All">
                    <span class="oi" aria-hidden="true"></span> List Generator
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link nav-child ml-4" href="/docs/tools/table" Match="NavLinkMatch.All">
                    <span class="oi" aria-hidden="true"></span> Table Generator
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link nav-child ml-4" href="/docs/tools/tag" Match="NavLinkMatch.All">
                    <span class="oi" aria-hidden="true"></span> Tag Generator
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    [Parameter]
    public NavMenus menu { get; set;}

    private bool collapseNavMenu = false;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    // Counter of the non-completed tasks
    private string taskCounter = null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        // When the task amount changes, show the new value
        TaskManager.OnTaskAmountChanged += (sender, amount) =>
        {
            // If the task amount is 0, hide the badge. Else, display the new amount
            if (amount == 0) {
                taskCounter = null;
            } else {
                taskCounter = amount.ToString();
            }
            // Re-render badge
            StateHasChanged();
        };

        base.OnInitialized();
    }
    

    // Set the nav menu based on its environment
    public enum NavMenus
    {
        Main,
        Docs
    }
}
